LINE ADDR CONTENTS SOURCE LINE
  1.               .EQU KBD_CNTL, 	$000 ;keyboard setup
  2.              	.EQU KBD_STAT, 	$000 ;keyboard setup
  3.              	.EQU KBD_DATA, 	$001
  4.              	.EQU KBD_FLUSH, 	$40
  5.              	.EQU TIM_CNTL, $030 ;timer setup
  6.              	.EQU TIM_STAT, $030
  7.              	.EQU TIM_VALUE, $031
  8.              	.EQU TIM_COUNT, $034
  9.              	.EQU INTERRUPT_ENA, $80 ;interrupt setup
 10.              	.EQU INTERRUPT_DIS,		 $00
 11.              	.EQU RESET_READY_BIT, $40
 12.              	.EQU START_AFTER_LOAD, $10
 13.              	.EQU ENABLE_RESET_AND_START, $D0
 14.              	.EQU ENABLE_AND_RESET, $C0
 15.              
 16.              	.EQU CRT_BUFFER, $100
 17.              	.EQU BOTTOM_RIGHT, $313 ;board setup
 18.              	.EQU CRT_XREG, $314
 19.              	.EQU CRT_YREG, $315
 20.              	.EQU CRT_CNTL, $316
 21.              	.EQU CRT_DATA, $317
 22.              	.EQU CRT_ROWS, $0E
 23.              	.EQU CRT_COLS, $26
 24.              	.EQU CLEAR_DISPLAY, $01 ;clearing
 25.              	.EQU HOME,		$04
 26.              
 27.              	.EQU PUT_NUM, $E00 ; MINI_OS JSRS
 28.              	.EQU GET_NUM, $E01
 29.              	.EQU PUT_STR, $E05
 30.              	.EQU PUT_NL, $E06
 31.              	.EQU PUT_NUM2, $E07
 32.              	.EQU PUT_CHR, $E08
 33.              	.EQU LEFT,	$68
 34.              	.EQU RIGHT,	$6C
 35.              	.EQU UP,	$6A
 36.              	.EQU DOWN,	$6B
 37.              	.EQU ENEMY_CHAR,	$A4 ;enemy symbol
 38.              	.EQU PLAYER_UP,	$5E
 39.              	.EQU PLAYER_LEFT,	$3C
 40.              	.EQU PLAYER_RIGHT,	$3E
 41.              	.EQU PLAYER_DOWN,	$76
 42.              	.EQU EXPLOSION,	$2A ;explosion character
 43.              	.EQU EMPTY,	$20 ;empty spot is a space
 44.              	.EQU OLD_MAZE_WALL,	$7C ;maze wall code
 45.              	.EQU OLD_MAZE_FLOOR,	$5F ;maze floor code
 46.              	.EQU PELLETS,	$B0
 47.              	.EQU OLD_PELLETS,	$2E
 48.              	.EQU MAZE_WALL,	$A6
 49.              	.EQU MAZE_FLOOR,	$D7
 50.              
 51.  000 020E00  	LDS# $E00 ; initiate the stack
 52.  001 000080  	LDA# INTERRUPT_ENA ; enable interrupts for the keyboard
 53.  002 712000  	OUTB KBD_CNTL
 54.  003 FFF033  	CIE ; makes sure that interrupts don’t interrupt the beginning of the program
 55.  004 0801C0  	PSH# WALL_STR_LENGTH
 56.  005 0801F8  	PSH# WALL_STR ;wall characters
 57.  006 412E05  	JSR PUT_STR
 58.  007 120002  	ADS# 2
 59.  008 08002E  	PSH# OLD_PELLETS ; switch out the old pellets character
 60.  009 0800B0  	PSH# PELLETS
 61.  00A 412020  	JSR CONVERT
 62.  00B 120002  	ADS# 2
 63.  00C 08007C  	PSH# OLD_MAZE_WALL ; switch out the old wall character
 64.  00D 0800A6  	PSH# MAZE_WALL
 65.  00E 412020  	JSR CONVERT
 66.  00F 120002  	ADS# 2
 67.  010 08005F  	PSH# OLD_MAZE_FLOOR ; switch out the old floor character
 68.  011 0800D7  	PSH# MAZE_FLOOR
 69.  012 412020  	JSR CONVERT
 70.  013 120002  	ADS# 2
 71.  014 41210E  	JSR SHOW_ENEMS ;enemies spawn
 72.  015 080076  	PSH# PLAYER_DOWN
 73.  016 41213D  	JSR SHOW_CHAR ;make player show
 74.  017 120001  	ADS# 1
 75.  018 0021F3  	LDA DELAY ; set the amount of time between enemy movements
 76.  019 732031  	OUTW TIM_VALUE
 77.  01A 0000D0  	LDA# ENABLE_RESET_AND_START ; enable timer interrupts
 78.  01B 712030  	OUTB TIM_CNTL
 79.  01C FFF032  	SIE ; set the interrupt flag
 80.  01D FFF038  MAINLOOP:	NOP
 81.  01E 49201D  	JNE MAINLOOP ;do nothing until interrupts
 82.  01F FFFFFF  	HLT
 83.              
 84.              	.EQU OLD_CHAR, 3
 85.              	.EQU NEW_CHAR, 2
 86.              
 87.  020 680000  CONVERT:	BGN# 0 ; replaces the original template characters with extended ascii character
 88.  021 FFF010  	PSHA
 89.  022 FFF011  	PSHX
 90.  023 010000  	LDX# 0
 91.  024 704100  CON_LOOP:	INB+ $100 ; checks if the character is a match with the old one
 92.  025 203003  	CMA ! OLD_CHAR
 93.  026 492029  	JNE NEXT_CHAR
 94.  027 003002  	LDA ! NEW_CHAR ; prints out the replacement
 95.  028 714100  	OUTB+ $100
 96.  029 600200  NEXT_CHAR:	AOC# $200
 97.  02A 492024  	JNE CON_LOOP
 98.  02B FFF014  	POPX
 99.  02C FFF013  	POPA
100.  02D 690000  	FIN# 0
101.  02E FFF040  	RTN
102.              
103.              
104.  02F FFF010  TIMERISR:	PSHA ;timer procedure
105.  030 FFF011  	PSHX
106.  031 1B21F2  	INC TIMER ;timer step
107.  032 000000  	LDA# 0
108.  033 010000  	LDX# 0
109.  034 2021F4  	CMA ISOVER ;check if game is over, timer stops when game stops
110.  035 482037  	JEQ MOVE_LOOP ;move on each timer step
111.  036 4120C4  	JSR DEATH_ANIM ;go to death animation if game is over
112.  037 0041ED  MOVE_LOOP:	LDA+ E1Y ;move on y axis
113.  038 180026  	MUL# 38
114.  039 1041E9  	ADA+ E1X ;move enemy on x axis
115.  03A 0420C3  	STA CURRENTLOC ;store enemy location
116.  03B 000020  	LDA# EMPTY ;make sure enemy leaves behind an empty space
117.  03C FFF011  	PSHX
118.  03D 0120C3  	LDX CURRENTLOC
119.  03E 714100  	OUTB+ $100 ;output at new position
120.  03F 0021E5  REROLL:	LDA SEED ;go back into loop if enemy hits maze
121.  040 180ADB  	mul# 2779
122.  041 1007CD  	ada# 1997
123.  042 1A0801  	mod# 2049
124.  043 0421E5  	sta SEED ;random direction for every movement
125.  044 1A0004  	mod# 4
126.  045 200000  	CMA# 0
127.  046 49205F  	JNE CHECK1
128.  047 0120C3  	LDX CURRENTLOC
129.  048 150026  	SBX# 38
130.  049 704100  	INB+ $100
131.  04A 2000A6  	CMA# MAZE_WALL ;prevent collision with walls
132.  04B 48203F  	JEQ REROLL
133.  04C 2000D7  	CMA# MAZE_FLOOR ;prevent collision with floors
134.  04D 48203F  	JEQ REROLL
135.  04E 20005E  	CMA# PLAYER_UP
136.  04F 492051  	JNE CHECK_L0
137.  050 412105  	JSR GAME_OVER
138.  051 20003C  CHECK_L0:	CMA# PLAYER_LEFT ;one multiple checks to make sure game ends on collision
139.  052 492054  	JNE CHECK_R0
140.  053 412105  	JSR GAME_OVER
141.  054 20003E  CHECK_R0:	CMA# PLAYER_RIGHT
142.  055 492057  	JNE CHECK_D0
143.  056 412105  	JSR GAME_OVER
144.  057 200076  CHECK_D0:	CMA# PLAYER_DOWN
145.  058 49205A  	JNE DONE_C0
146.  059 412105  	JSR GAME_OVER
147.  05A 0520C3  DONE_C0:	STX CURRENTLOC ; stores the new location
148.  05B FFF014  	POPX ; Stores the new x value
149.  05C 1C41ED  	DEC+ E1Y
150.  05D FFF011  	PSHX
151.  05E 4020AA  	JMP SUCCESS ;movement successful, no reroll
152.  05F 200001  CHECK1:	CMA# 1
153.  060 492079  	JNE CHECK2
154.  061 0120C3  	LDX CURRENTLOC
155.  062 110001  	ADX# 1
156.  063 704100  	INB+ $100
157.  064 2000A6  	CMA# MAZE_WALL ; checks wall collision
158.  065 48203F  	JEQ REROLL
159.  066 2000D7  	CMA# MAZE_FLOOR
160.  067 48203F  	JEQ REROLL
161.  068 20005E  	CMA# PLAYER_UP
162.  069 49206B  	JNE CHECK_L1
163.  06A 412105  	JSR GAME_OVER
164.  06B 20003C  CHECK_L1:	CMA# PLAYER_LEFT ; checks for player collision
165.  06C 49206E  	JNE CHECK_R1
166.  06D 412105  	JSR GAME_OVER
167.  06E 20003E  CHECK_R1:	CMA# PLAYER_RIGHT
168.  06F 492071  	JNE CHECK_D1
169.  070 412105  	JSR GAME_OVER
170.  071 200076  CHECK_D1:	CMA# PLAYER_DOWN
171.  072 492074  	JNE DONE_C1
172.  073 412105  	JSR GAME_OVER
173.  074 0520C3  DONE_C1:	STX CURRENTLOC ; stores new location information
174.  075 FFF014  	POPX
175.  076 1B41E9  	INC+ E1X
176.  077 FFF011  	PSHX
177.  078 4020AA  	JMP SUCCESS ; jumps to finish moving enemy after no collision
178.  079 200002  CHECK2:	CMA# 2
179.  07A 492093  	JNE CHECK3
180.  07B 0120C3  	LDX CURRENTLOC
181.  07C 110026  	ADX# 38
182.  07D 704100  	INB+ $100
183.  07E 2000A6  	CMA# MAZE_WALL
184.  07F 48203F  	JEQ REROLL
185.  080 2000D7  	CMA# MAZE_FLOOR
186.  081 48203F  	JEQ REROLL
187.  082 20005E  	CMA# PLAYER_UP
188.  083 492085  	JNE CHECK_L2
189.  084 412105  	JSR GAME_OVER
190.  085 20003C  CHECK_L2:	CMA# PLAYER_LEFT
191.  086 492088  	JNE CHECK_R2
192.  087 412105  	JSR GAME_OVER
193.  088 20003E  CHECK_R2:	CMA# PLAYER_RIGHT
194.  089 49208B  	JNE CHECK_D2
195.  08A 412105  	JSR GAME_OVER
196.  08B 200076  CHECK_D2:	CMA# PLAYER_DOWN
197.  08C 49208E  	JNE DONE_C2
198.  08D 412105  	JSR GAME_OVER
199.  08E 0520C3  DONE_C2:	STX CURRENTLOC
200.  08F FFF014  	POPX
201.  090 1B41ED  	INC+ E1Y
202.  091 FFF011  	PSHX
203.  092 4020AA  	JMP SUCCESS ; jumps to finish moving enemy after no collision
204.  093 0120C3  CHECK3:	LDX CURRENTLOC
205.  094 150001  	SBX# 1
206.  095 704100  	INB+ $100
207.  096 2000A6  	CMA# MAZE_WALL ; checks for collison with walls
208.  097 48203F  	JEQ REROLL
209.  098 2000D7  	CMA# MAZE_FLOOR
210.  099 48203F  	JEQ REROLL
211.  09A 20005E  	CMA# PLAYER_UP
212.  09B 49209D  	JNE CHECK_L3
213.  09C 412105  	JSR GAME_OVER
214.  09D 20003C  CHECK_L3:	CMA# PLAYER_LEFT ; checks for player collision
215.  09E 4920A0  	JNE CHECK_R3
216.  09F 412105  	JSR GAME_OVER
217.  0A0 20003E  CHECK_R3:	CMA# PLAYER_RIGHT
218.  0A1 4920A3  	JNE CHECK_D3
219.  0A2 412105  	JSR GAME_OVER
220.  0A3 200076  CHECK_D3:	CMA# PLAYER_DOWN
221.  0A4 4920A6  	JNE DONE_C3
222.  0A5 412105  	JSR GAME_OVER
223.  0A6 0520C3  DONE_C3:	STX CURRENTLOC ; stores updated enemy location
224.  0A7 FFF014  	POPX
225.  0A8 1C41E9  	DEC+ E1X
226.  0A9 FFF011  	PSHX
227.  0AA 0120C3  SUCCESS:	LDX CURRENTLOC ;procedure called for valid movement
228.  0AB 0000A4  	LDA# ENEMY_CHAR
229.  0AC 714100  	OUTB+ $100 ; outputs the character at the new location
230.  0AD 0000C0  	LDA# ENABLE_AND_RESET ; resets the timer
231.  0AE 712030  	OUTB TIM_CNTL
232.  0AF FFF014  	POPX
233.  0B0 600004  	AOC# 4
234.  0B1 492037  	JNE MOVE_LOOP ; repeats for all enemies
235.  0B2 0021F6  	LDA SCORE ; display score
236.  0B3 1A000A  	MOD# 10
237.  0B4 100030  	ADA# $30
238.  0B5 71211D  	OUTB $11D
239.  0B6 0021F6  	LDA SCORE
240.  0B7 1A0064  	MOD# 100
241.  0B8 19000A  	DIV# 10
242.  0B9 100030  	ADA# $30
243.  0BA 71211C  	OUTB $11C
244.  0BB 0021F6  	LDA SCORE
245.  0BC 1A03E8  	MOD# 1000
246.  0BD 190064  	DIV# 100
247.  0BE 100030  	ADA# $30
248.  0BF 71211B  	OUTB $11B
249.  0C0 FFF014  TIMER_END:	POPX
250.  0C1 FFF013  	POPA
251.  0C2 FFF041  	IRTN ;return after movement
252.              
253.  0C3 000000  CURRENTLOC:	.WORD 0 ;store current location
254.              
255.  0C4 0021F7  DEATH_ANIM:	LDA ANIMATION_PROGRESS ;runs on player death
256.  0C5 200000  	CMA# 0
257.  0C6 4920C9  	JNE ANIM_1
258.  0C7 08005E  	PSH# PLAYER_UP
259.  0C8 402100  	JMP SHOW_ANIM
260.  0C9 200001  ANIM_1:	CMA# 1
261.  0CA 4920CD  	JNE ANIM_2
262.  0CB 08003E  	PSH# PLAYER_RIGHT
263.  0CC 402100  	JMP SHOW_ANIM
264.  0CD 200002  ANIM_2:	CMA# 2
265.  0CE 4920D1  	JNE ANIM_3
266.  0CF 080076  	PSH# PLAYER_DOWN	
267.  0D0 402100  	JMP SHOW_ANIM
268.  0D1 200003  ANIM_3:	CMA# 3
269.  0D2 4920DB  	JNE ANIM_4
270.  0D3 000002  	LDA# 2
271.  0D4 2021F5  	CMA NUM_ROT
272.  0D5 4820D9  	JEQ LAST_ROT
273.  0D6 000000  	LDA# 0
274.  0D7 0421F7  	STA ANIMATION_PROGRESS
275.  0D8 1B21F5  	INC NUM_ROT
276.  0D9 08003C  LAST_ROT:	PSH# PLAYER_LEFT ;
277.  0DA 402100  	JMP SHOW_ANIM
278.  0DB 200004  ANIM_4:	CMA# 4 ; displays an “explosion”
279.  0DC 492104  	JNE ANIM_5
280.  0DD 1C21E7  	DEC PLAYERX
281.  0DE 1C21E8  	DEC PLAYERY
282.  0DF 08002A  	PSH# EXPLOSION
283.  0E0 41213D  	JSR SHOW_CHAR
284.  0E1 120001  	ADS# 1
285.  0E2 1B21E7  	INC PLAYERX
286.  0E3 08002A  	PSH# EXPLOSION
287.  0E4 41213D  	JSR SHOW_CHAR
288.  0E5 120001  	ADS# 1
289.  0E6 1B21E7  	INC PLAYERX
290.  0E7 08002A  	PSH# EXPLOSION
291.  0E8 41213D  	JSR SHOW_CHAR
292.  0E9 120001  	ADS# 1
293.  0EA 1B21E8  	INC PLAYERY
294.  0EB 08002A  	PSH# EXPLOSION
295.  0EC 41213D  	JSR SHOW_CHAR
296.  0ED 120001  	ADS# 1
297.  0EE 1C21E7  	DEC PLAYERX
298.  0EF 08002A  	PSH# EXPLOSION
299.  0F0 41213D  	JSR SHOW_CHAR
300.  0F1 120001  	ADS# 1
301.  0F2 1C21E7  	DEC PLAYERX
302.  0F3 08002A  	PSH# EXPLOSION
303.  0F4 41213D  	JSR SHOW_CHAR
304.  0F5 120001  	ADS# 1
305.  0F6 1B21E8  	INC PLAYERY
306.  0F7 08002A  	PSH# EXPLOSION
307.  0F8 41213D  	JSR SHOW_CHAR
308.  0F9 120001  	ADS# 1
309.  0FA 1B21E7  	INC PLAYERX
310.  0FB 08002A  	PSH# EXPLOSION
311.  0FC 41213D  	JSR SHOW_CHAR
312.  0FD 120001  	ADS# 1
313.  0FE 1B21E7  	INC PLAYERX
314.  0FF 08002A  	PSH# EXPLOSION
315.  100 41213D  SHOW_ANIM:	JSR SHOW_CHAR
316.  101 120001  	ADS# 1
317.  102 1B21F7  	INC ANIMATION_PROGRESS
318.  103 FFF040  	RTN
319.  104 FFFFFF  ANIM_5:	HLT ; animation is over and ends the game
320.              
321.  105 1B21F4  GAME_OVER:	INC ISOVER ; indicates the game is over
322.  106 000025  	LDA# 37 ; moves the enemies offscreen
323.  107 0421E9  	STA E1X
324.  108 0421EA  	STA E2X
325.  109 0421EB  	STA E3X
326.  10A 0421EC  	STA E4X
327.  10B 000000  	LDA# INTERRUPT_DIS ; disables keyboard interrupts
328.  10C 712000  	OUTB KBD_CNTL
329.  10D FFF040  	RTN
330.              
331.              
332.  10E 680000  SHOW_ENEMS:	BGN# 0
333.  10F FFF010  	PSHA
334.  110 FFF011  	PSHX
335.  111 0021F1  	LDA NUM_ENEM
336.  112 200000  	CMA# 0
337.  113 48212A  	JEQ END
338.  114 0821E9  	PSH E1X
339.  115 0821ED  	PSH E1Y
340.  116 41212E  	JSR SHOW_ENEM ;first enemy spawned
341.  117 120002  	ADS# 2
342.  118 200001  	CMA# 1
343.  119 48212A  	JEQ END
344.  11A 0821EA  	PSH E2X
345.  11B 0821EE  	PSH E2Y
346.  11C 41212E  	JSR SHOW_ENEM ;second enemy spawned
347.  11D 120002  	ADS# 2
348.  11E 200002  	CMA# 2
349.  11F 48212A  	JEQ END
350.  120 0821EB  	PSH E3X
351.  121 0821EF  	PSH E3Y
352.  122 41212E  	JSR SHOW_ENEM ;third enemy spawned
353.  123 120002  	ADS# 2
354.  124 200003  	CMA# 3
355.  125 48212A  	JEQ END
356.  126 0821EC  	PSH E4X
357.  127 0821F0  	PSH E4Y
358.  128 41212E  	JSR SHOW_ENEM ;fourth enemy spawned
359.  129 120002  	ADS# 2
360.  12A FFF014  END:	POPX
361.  12B FFF013  	POPA
362.  12C 690000  	FIN# 0
363.  12D FFF040  	RTN
364.              
365.              	.EQU CURRENTX, 3
366.              	.EQU CURRENTY, 2
367.              
368.  12E 680000  SHOW_ENEM:	BGN# 0
369.  12F FFF010  	PSHA
370.  130 FFF011  	PSHX
371.  131 003002  	LDA ! CURRENTY ; calculates the position of the enemy
372.  132 180026  	MUL# 38
373.  133 103003  	ADA ! CURRENTX
374.  134 04213C  	STA CURRENTPOS
375.  135 01213C  	LDX CURRENTPOS
376.  136 0000A4  	LDA# ENEMY_CHAR
377.  137 714100  	OUTB+ $100 ; displays the enemy at the position
378.  138 FFF014  	POPX
379.  139 FFF013  	POPA
380.  13A 690000  	FIN# 0
381.  13B FFF040  	RTN
382.  13C 000000  CURRENTPOS:	.WORD 0
383.              
384.              	.EQU CHAR_ORIENTAION, 2
385.              
386.  13D 680000  SHOW_CHAR:	BGN# 0 ;spawn the player
387.  13E FFF010  	PSHA
388.  13F FFF011  	PSHX
389.  140 0021E8  	LDA PLAYERY ; calculates the player position
390.  141 180026  	MUL# 38
391.  142 1021E7  	ADA PLAYERX
392.  143 0421E6  	STA PLAYERPOS
393.  144 0121E6  	LDX PLAYERPOS
394.  145 003002  	LDA ! CHAR_ORIENTAION ; displays the player in a specific orientation at the location
395.  146 714100  	OUTB+ $100
396.  147 FFF014  	POPX
397.  148 FFF013  	POPA
398.  149 690000  	FIN# 0
399.  14A FFF040  	RTN
400.              	
401.              
402.  14B 680000  MOVE_RIGHT:	BGN# 0
403.  14C FFF010  	PSHA
404.  14D FFF011  	PSHX
405.  14E 080020  	PSH# EMPTY
406.  14F 41213D  	JSR SHOW_CHAR ; erases the char at the old location
407.  150 120001  	ADS# 1
408.  151 0021E7  	LDA PLAYERX ; moves the player x to the right
409.  152 100001  	ADA# 1
410.  153 0421E7  	STA PLAYERX ; calculates the new position
411.  154 0021E8  	LDA PLAYERY
412.  155 180026  	MUL# 38
413.  156 1021E7  	ADA PLAYERX
414.  157 0421E6  	STA PLAYERPOS
415.  158 0121E6  	LDX PLAYERPOS
416.  159 704100  	INB+ $100 ; takes in the char at the new location
417.  15A 2000B0  	CMA# PELLETS
418.  15B 49215D  	JNE CHECK_E_R
419.  15C 1B21F6  	INC SCORE
420.  15D 2000A4  CHECK_E_R:	CMA# ENEMY_CHAR ; checks for collision with an enemy
421.  15E 492160  	JNE CHECK_WR
422.  15F 412105  	JSR GAME_OVER
423.  160 2000A6  CHECK_WR:	CMA# MAZE_WALL ; checks for collision with a wall or floor
424.  161 482164  	JEQ CLEAR_RIGHT
425.  162 2000D7  	CMA# MAZE_FLOOR
426.  163 492167  	JNE CONT_RIGHT
427.  164 0021E7  CLEAR_RIGHT:LDA PLAYERX ; updates the player x position
428.  165 140001  	SBA# 1
429.  166 0421E7  	STA PLAYERX
430.  167 08003E  CONT_RIGHT:	PSH# PLAYER_RIGHT ; displays the char at the correct orientation at the new location
431.  168 41213D  	JSR SHOW_CHAR
432.  169 120001  	ADS# 1
433.  16A FFF014  	POPX
434.  16B FFF013  	POPA
435.  16C 690000  	FIN# 0
436.  16D FFF040  	RTN
437.              
438.  16E 680000  MOVE_LEFT:	BGN# 0
439.  16F FFF010  	PSHA
440.  170 FFF011  	PSHX
441.  171 080020  	PSH# EMPTY
442.  172 41213D  	JSR SHOW_CHAR ; erases the char at the old location
443.  173 120001  	ADS# 1
444.  174 0021E7  	LDA PLAYERX ; subtracts one from the player x
445.  175 140001  	SBA# 1
446.  176 0421E7  	STA PLAYERX
447.  177 0021E8  	LDA PLAYERY ; calculates the new position
448.  178 180026  	MUL# 38
449.  179 1021E7  	ADA PLAYERX
450.  17A 0421E6  	STA PLAYERPOS
451.  17B 0121E6  	LDX PLAYERPOS
452.  17C 704100  	INB+ $100 ; takes in the current character at the new position
453.  17D 2000B0  	CMA# PELLETS ; checks for pellets
454.  17E 492180  	JNE CHECK_E_L
455.  17F 1B21F6  	INC SCORE
456.  180 2000A4  CHECK_E_L:	CMA# ENEMY_CHAR ; checks for enemy collision
457.  181 492183  	JNE CHECK_WL
458.  182 412105  	JSR GAME_OVER
459.  183 2000A6  CHECK_WL:	CMA# MAZE_WALL ; checks for maze wall or floor
460.  184 482187  	JEQ CLEAR_LEFT
461.  185 2000D7  	CMA# MAZE_FLOOR
462.  186 49218A  	JNE CONT_LEFT
463.  187 0021E7  CLEAR_LEFT:	LDA PLAYERX
464.  188 100001  	ADA# 1
465.  189 0421E7  	STA PLAYERX
466.  18A 08003C  CONT_LEFT:	PSH# PLAYER_LEFT ; display char at new location
467.  18B 41213D  	JSR SHOW_CHAR
468.  18C 120001  	ADS# 1
469.  18D FFF014  	POPX
470.  18E FFF013  	POPA
471.  18F 690000  	FIN# 0
472.  190 FFF040  	RTN
473.              
474.  191 680000  MOVE_UP:	BGN# 0
475.  192 FFF010  	PSHA
476.  193 FFF011  	PSHX
477.  194 080020  	PSH# EMPTY ; erase the char at the old location
478.  195 41213D  	JSR SHOW_CHAR
479.  196 120001  	ADS# 1
480.  197 0021E7  	LDA PLAYERX
481.  198 140026  	SBA# 38 ; adjust the position
482.  199 0421E7  	STA PLAYERX
483.  19A 0021E8  	LDA PLAYERY ; calculate the new position
484.  19B 180026  	MUL# 38
485.  19C 1021E7  	ADA PLAYERX
486.  19D 0421E6  	STA PLAYERPOS
487.  19E 0121E6  	LDX PLAYERPOS
488.  19F 704100  	INB+ $100 ; take in the char currently at the new location
489.  1A0 2000B0  	CMA# PELLETS ; check for pellets
490.  1A1 4921A3  	JNE CHECK_E_U
491.  1A2 1B21F6  	INC SCORE
492.  1A3 2000A4  CHECK_E_U:	CMA# ENEMY_CHAR ; check for an enemy char
493.  1A4 4921A6  	JNE CHECK_WU
494.  1A5 412105  	JSR GAME_OVER
495.  1A6 2000D7  CHECK_WU:	CMA# MAZE_FLOOR ; check for wall or floor
496.  1A7 4821AA  	JEQ CLEAR_UP
497.  1A8 2000A6  	CMA# MAZE_WALL
498.  1A9 4921AD  	JNE CONT_UP
499.  1AA 0021E7  CLEAR_UP:	LDA PLAYERX
500.  1AB 100026  	ADA# 38
501.  1AC 0421E7  	STA PLAYERX
502.  1AD 08005E  CONT_UP:	PSH# PLAYER_UP ; print out at the new location
503.  1AE 41213D  	JSR SHOW_CHAR ;move up and clear space behind
504.  1AF 120001  	ADS# 1
505.  1B0 FFF014  	POPX
506.  1B1 FFF013  	POPA
507.  1B2 690000  	FIN# 0
508.  1B3 FFF040  	RTN
509.              
510.  1B4 680000  MOVE_DOWN:	BGN# 0
511.  1B5 FFF010  	PSHA
512.  1B6 FFF011  	PSHX
513.  1B7 080020  	PSH# EMPTY ; erase the char at the old location
514.  1B8 41213D  	JSR SHOW_CHAR
515.  1B9 120001  	ADS# 1
516.  1BA 0021E7  	LDA PLAYERX ; adjust the position
517.  1BB 100026  	ADA# 38
518.  1BC 0421E7  	STA PLAYERX
519.  1BD 0021E8  	LDA PLAYERY ; calculate the new position
520.  1BE 180026  	MUL# 38
521.  1BF 1021E7  	ADA PLAYERX
522.  1C0 0421E6  	STA PLAYERPOS
523.  1C1 0121E6  	LDX PLAYERPOS
524.  1C2 704100  	INB+ $100 ; take in the character at the new position
525.  1C3 2000B0  	CMA# PELLETS ; check for pellets
526.  1C4 4921C6  	JNE CHECK_E_D
527.  1C5 1B21F6  	INC SCORE
528.  1C6 2000A4  CHECK_E_D:	CMA# ENEMY_CHAR ; check for enemy character
529.  1C7 4921C9  	JNE CHECK_WD
530.  1C8 412105  	JSR GAME_OVER
531.  1C9 2000D7  CHECK_WD:	CMA# MAZE_FLOOR ; check for floor or wall
532.  1CA 4821CD  	JEQ CLEAR_DOWN
533.  1CB 2000A6  	CMA# MAZE_WALL
534.  1CC 4921D0  	JNE CONT_DOWN
535.  1CD 0021E7  CLEAR_DOWN:	LDA PLAYERX
536.  1CE 140026  	SBA# 38
537.  1CF 0421E7  	STA PLAYERX
538.  1D0 080076  CONT_DOWN:	PSH# PLAYER_DOWN ; show character at new position
539.  1D1 41213D  	JSR SHOW_CHAR
540.  1D2 120001  	ADS# 1
541.  1D3 FFF014  	POPX
542.  1D4 FFF013  	POPA
543.  1D5 690000  	FIN# 0
544.  1D6 FFF040  	RTN
545.              
546.  1D7 702001  KEYBOARD:	INB KBD_DATA ;player moves via keyboard interrupt
547.  1D8 200068  	CMA# LEFT
548.  1D9 4921DB  	JNE CHECK_R
549.  1DA 41216E  	JSR MOVE_LEFT ;move left if true
550.  1DB 20006C  CHECK_R:	CMA# RIGHT
551.  1DC 4921DE  	JNE CHECK_U
552.  1DD 41214B  	JSR MOVE_RIGHT ;move right if true
553.  1DE 20006A  CHECK_U:	CMA# UP
554.  1DF 4921E1  	JNE CHECK_D
555.  1E0 412191  	JSR MOVE_UP ;move up if true
556.  1E1 20006B  CHECK_D:	CMA# DOWN
557.  1E2 4921E4  	JNE KEY_END
558.  1E3 4121B4  	JSR MOVE_DOWN ;move down if true
559.  1E4 FFF041  KEY_END:	IRTN
560.              
561.  1E5 000002  SEED:	.WORD 2 ;to generate random values
562.  1E6 000000  PLAYERPOS:	.WORD 0
563.  1E7 000006  PLAYERX:	.WORD 6
564.  1E8 000004  PLAYERY:	.WORD 4
565.  1E9 000001  E1X:	.WORD 1 ;enemies spawn in corners
566.  1EA 00001D  E2X:	.WORD 29
567.  1EB 000001  E3X:	.WORD 1
568.  1EC 00001D  E4X:	.WORD 29
569.  1ED 000002  E1Y:	.WORD 2
570.  1EE 000002  E2Y:	.WORD 2
571.  1EF 000009  E3Y:	.WORD 9
572.  1F0 000009  E4Y:	.WORD 9
573.  1F1 000004  NUM_ENEM:	.WORD 4
574.  1F2 000000  TIMER:	.WORD 0
575.  1F3 004E20  DELAY:	.WORD 20000
576.  1F4 000000  ISOVER:	.WORD 0
577.  1F5 000001  NUM_ROT:	.WORD 1
578.  1F6 000000  SCORE:	.WORD 0
579.  1F7 000000  ANIMATION_PROGRESS:	.WORD 0
580.  1F8 202020  WALL_STR:	.CHAR '                    score: 000        _______________________________       | ......        .....         |       | ___        _       |  . __  |       | |  |  . |_|  _|__  |  . |_| |       | |__|  . |     |       .     |       |       .   ......... ___ . . |       |  __    ...|  .     |      | |       |    ___|__ |   .___|_  ... | |       | ....      |            ___  |       |. __   _|    ...   . . |   | |       ______________________________', WALL_STR_LENGTH ;wall string is printed to display screen before game starts
      1F9 202020
      1FA 202020
      1FB 202020
      1FC 202020
      1FD 202020
      1FE 202073
      1FF 636F72
      200 653A20
      201 303030
      202 202020
      203 202020
      204 20205F
      205 5F5F5F
      206 5F5F5F
      207 5F5F5F
      208 5F5F5F
      209 5F5F5F
      20A 5F5F5F
      20B 5F5F5F
      20C 5F5F5F
      20D 5F5F5F
      20E 5F5F5F
      20F 202020
      210 202020
      211 207C20
      212 2E2E2E
      213 2E2E2E
      214 202020
      215 202020
      216 20202E
      217 2E2E2E
      218 2E2020
      219 202020
      21A 202020
      21B 207C20
      21C 202020
      21D 202020
      21E 7C205F
      21F 5F5F20
      220 202020
      221 202020
      222 205F20
      223 202020
      224 202020
      225 7C2020
      226 2E205F
      227 5F2020
      228 7C2020
      229 202020
      22A 20207C
      22B 207C20
      22C 207C20
      22D 202E20
      22E 7C5F7C
      22F 20205F
      230 7C5F5F
      231 20207C
      232 20202E
      233 207C5F
      234 7C207C
      235 202020
      236 202020
      237 207C20
      238 7C5F5F
      239 7C2020
      23A 2E207C
      23B 202020
      23C 20207C
      23D 202020
      23E 202020
      23F 202E20
      240 202020
      241 207C20
      242 202020
      243 202020
      244 7C2020
      245 202020
      246 20202E
      247 202020
      248 2E2E2E
      249 2E2E2E
      24A 2E2E2E
      24B 205F5F
      24C 5F202E
      24D 202E20
      24E 7C2020
      24F 202020
      250 20207C
      251 20205F
      252 5F2020
      253 20202E
      254 2E2E7C
      255 20202E
      256 202020
      257 20207C
      258 202020
      259 202020
      25A 7C207C
      25B 202020
      25C 202020
      25D 207C20
      25E 202020
      25F 5F5F5F
      260 7C5F5F
      261 207C20
      262 20202E
      263 5F5F5F
      264 7C5F20
      265 202E2E
      266 2E207C
      267 207C20
      268 202020
      269 202020
      26A 7C202E
      26B 2E2E2E
      26C 202020
      26D 202020
      26E 7C2020
      26F 202020
      270 202020
      271 202020
      272 205F5F
      273 5F2020
      274 7C2020
      275 202020
      276 20207C
      277 2E205F
      278 5F2020
      279 205F7C
      27A 202020
      27B 202E2E
      27C 2E2020
      27D 202E20
      27E 2E207C
      27F 202020
      280 7C207C
      281 202020
      282 202020
      283 205F5F
      284 5F5F5F
      285 5F5F5F
      286 5F5F5F
      287 5F5F5F
      288 5F5F5F
      289 5F5F5F
      28A 5F5F5F
      28B 5F5F5F
      28C 5F5F5F
      28D 5F2020
581.              
582.              	.EQU @, $FF8
583.  FF8 0001D7  	.WORD KEYBOARD
584.              
585.              	.EQU @, $FFB
586.  FFB 00002F  	.WORD TIMERISR
587.              	.END
588.              
589.              
590.              
591.              
592.              
593.              
594.              

                     SYMBOL TABLE CONTENTS

0001F7 = ANIMATION_PROGRESS0000C9 = ANIM_1          0000CD = ANIM_2          
0000D1 = ANIM_3          0000DB = ANIM_4          000104 = ANIM_5          
000313 = BOTTOM_RIGHT    000002 = CHAR_ORIENTAION 00005F = CHECK1          
000079 = CHECK2          000093 = CHECK3          0001E1 = CHECK_D         
000057 = CHECK_D0        000071 = CHECK_D1        00008B = CHECK_D2        
0000A3 = CHECK_D3        0001C6 = CHECK_E_D       000180 = CHECK_E_L       
00015D = CHECK_E_R       0001A3 = CHECK_E_U       000051 = CHECK_L0        
00006B = CHECK_L1        000085 = CHECK_L2        00009D = CHECK_L3        
0001DB = CHECK_R         000054 = CHECK_R0        00006E = CHECK_R1        
000088 = CHECK_R2        0000A0 = CHECK_R3        0001DE = CHECK_U         
0001C9 = CHECK_WD        000183 = CHECK_WL        000160 = CHECK_WR        
0001A6 = CHECK_WU        000001 = CLEAR_DISPLAY   0001CD = CLEAR_DOWN      
000187 = CLEAR_LEFT      000164 = CLEAR_RIGHT     0001AA = CLEAR_UP        
0001D0 = CONT_DOWN       00018A = CONT_LEFT       000167 = CONT_RIGHT      
0001AD = CONT_UP         000020 = CONVERT         000024 = CON_LOOP        
000100 = CRT_BUFFER      000316 = CRT_CNTL        000026 = CRT_COLS        
000317 = CRT_DATA        00000E = CRT_ROWS        000314 = CRT_XREG        
000315 = CRT_YREG        0000C3 = CURRENTLOC      00013C = CURRENTPOS      
000003 = CURRENTX        000002 = CURRENTY        0000C4 = DEATH_ANIM      
0001F3 = DELAY           00005A = DONE_C0         000074 = DONE_C1         
00008E = DONE_C2         0000A6 = DONE_C3         00006B = DOWN            
0001E9 = E1X             0001ED = E1Y             0001EA = E2X             
0001EE = E2Y             0001EB = E3X             0001EF = E3Y             
0001EC = E4X             0001F0 = E4Y             000020 = EMPTY           
0000C0 = ENABLE_AND_RESET0000D0 = ENABLE_RESET_AND_START00012A = END             
0000A4 = ENEMY_CHAR      00002A = EXPLOSION       000105 = GAME_OVER       
000E01 = GET_NUM         000004 = HOME            000000 = INTERRUPT_DIS   
000080 = INTERRUPT_ENA   0001F4 = ISOVER          000000 = KBD_CNTL        
000001 = KBD_DATA        000040 = KBD_FLUSH       000000 = KBD_STAT        
0001D7 = KEYBOARD        0001E4 = KEY_END         0000D9 = LAST_ROT        
000068 = LEFT            00001D = MAINLOOP        0000D7 = MAZE_FLOOR      
0000A6 = MAZE_WALL       0001B4 = MOVE_DOWN       00016E = MOVE_LEFT       
000037 = MOVE_LOOP       00014B = MOVE_RIGHT      000191 = MOVE_UP         
000002 = NEW_CHAR        000029 = NEXT_CHAR       0001F1 = NUM_ENEM        
0001F5 = NUM_ROT         000003 = OLD_CHAR        00005F = OLD_MAZE_FLOOR  
00007C = OLD_MAZE_WALL   00002E = OLD_PELLETS     0000B0 = PELLETS         
0001E6 = PLAYERPOS       0001E7 = PLAYERX         0001E8 = PLAYERY         
000076 = PLAYER_DOWN     00003C = PLAYER_LEFT     00003E = PLAYER_RIGHT    
00005E = PLAYER_UP       000E08 = PUT_CHR         000E06 = PUT_NL          
000E00 = PUT_NUM         000E07 = PUT_NUM2        000E05 = PUT_STR         
00003F = REROLL          000040 = RESET_READY_BIT 00006C = RIGHT           
0001F6 = SCORE           0001E5 = SEED            000100 = SHOW_ANIM       
00013D = SHOW_CHAR       00012E = SHOW_ENEM       00010E = SHOW_ENEMS      
000010 = START_AFTER_LOAD0000AA = SUCCESS         0001F2 = TIMER           
00002F = TIMERISR        0000C0 = TIMER_END       000030 = TIM_CNTL        
000034 = TIM_COUNT       000030 = TIM_STAT        000031 = TIM_VALUE       
00006A = UP              0001F8 = WALL_STR        0001C0 = WALL_STR_LENGTH 
